{"version":3,"sources":["Components/NewNote.js","Components/Note.js","Components/Navbar.js","Components/Main.js","App.js","index.js"],"names":["NewNote","props","console","log","layout","toggleTheme","backgroundColor","theme","color","currentItem","items","map","item","className","style","key","border","type","id","value","note","onChange","e","handleEdit","target","onClick","handleDelete","icon","faTrash","Note","useState","notes","setNote","setItem","React","useEffect","data","localStorage","getItem","JSON","parse","stringify","placeholder","name","minRows","spellCheck","outline","height","width","preventDefault","newItems","filteredItems","filter","text","Navbar","themeBtnText","setThemeText","setTheme","display","justifyContent","gridTemplateColumns","setLayout","letterSpacing","faRedo","size","faList","Dropdown","Toggle","variant","faCog","Menu","Item","href","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03245d4c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\n\r\nexport default function NewNote(props) {\r\n  console.log(props.layout);\r\n  const layout = props.layout;\r\n  const toggleTheme = {\r\n    backgroundColor: props.theme === \"dark\" ? \"#333333\" : \"white\",\r\n    color: props.theme === \"dark\" ? \"white\" : \"#333333\",\r\n    ...layout,\r\n  };\r\n\r\n  console.log(toggleTheme);\r\n  let currentItem = props.items.map((item) => {\r\n    return (\r\n      <div className=\"note-cards\" style={{ backgroundColor: item.color }} key={item.key}>\r\n        <h3 style={{ backgroundColor: item.color }}>{item.key}</h3>\r\n        <TextareaAutosize\r\n          style={{ backgroundColor: item.color, border: \"none\" }}\r\n          type=\"text\"\r\n          id={item.key}\r\n          value={item.note}\r\n          onChange={(e) => props.handleEdit(e.target.value, item.key)}\r\n        />\r\n        <button className=\"delete-btn\" style={{ backgroundColor: item.color }}>\r\n          <FontAwesomeIcon\r\n            style={{ backgroundColor: item.color }}\r\n            onClick={() => {\r\n              props.handleDelete(item.key);\r\n            }}\r\n            icon={faTrash}\r\n          />\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={toggleTheme} className=\"notes-container\">\r\n      {currentItem}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport NewNote from \"./NewNote\";\r\n\r\nfunction Note(props) {\r\n  console.log(props.layout);\r\n  const [notes, setNote] = useState({ key: \"\", note: \"\", color: \"#ffffff\" });\r\n  const [items, setItem] = useState([]);\r\n\r\n  const toggleTheme = {\r\n    backgroundColor: props.theme === \"dark\" ? \"#333333\" : \"white\",\r\n    color: props.theme === \"dark\" ? \"white\" : \"#333333\",\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    const newItems = notes;\r\n    if (newItems.note !== \"\") {\r\n      setItem([...items, newItems]);\r\n    }\r\n    setNote({ note: \"\", key: \"\", color: \"#ffffff\" }); // reseting values after pressing enter\r\n  };\r\n  const handleDelete = (key) => {\r\n    const filteredItems = items.filter((item) => item.key !== key);\r\n    setItem(filteredItems);\r\n  };\r\n\r\n  const handleEdit = (text, key) => {\r\n    const allNotes = items;\r\n    allNotes.map((item) => {\r\n      if (item.key === key) {\r\n        item.note = text;\r\n      }\r\n    });\r\n    setItem([...items]);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const data = localStorage.getItem(\"notes\");\r\n    if (data) {\r\n      setItem(JSON.parse(data));\r\n    }\r\n  }, []); //display what was in local storage only on the first render\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(\"notes\", JSON.stringify(items));\r\n  }); // set items array of all the values into the localstorage\r\n\r\n  let buttonStyles = {\r\n    display: \"flex\",\r\n    flexAlign: \"row\",\r\n    alignItems: \"center\",\r\n  };\r\n\r\n  return (\r\n    <div style={toggleTheme} className=\"main-body\">\r\n      <form style={toggleTheme} className=\"enter-text\">\r\n        <input\r\n          style={toggleTheme}\r\n          className=\"input-title\"\r\n          placeholder=\"Title...\"\r\n          name=\"key\"\r\n          value={notes.key || \"\"}\r\n          onChange={(e) => setNote({ ...notes, key: e.target.value })}\r\n        />\r\n\r\n        <TextareaAutosize\r\n          style={toggleTheme}\r\n          name=\"text\"\r\n          className=\"input-note\"\r\n          placeholder=\"enter note...\"\r\n          minRows=\"5\"\r\n          spellCheck=\"false\"\r\n          value={notes.note || \"\"}\r\n          onChange={(e) => setNote({ ...notes, note: e.target.value })}\r\n        />\r\n        <div style={(buttonStyles, toggleTheme)} className=\"form-btns\">\r\n          <button\r\n            style={{ border: \"none\", outline: \"none\", height: \"4vh\", width: \"8vh\" }}\r\n            onClick={handleClick}\r\n          >\r\n            Enter\r\n          </button>\r\n\r\n          <input\r\n            className=\"color-picker\"\r\n            style={{ height: \"4vh\", width: \"8vh\" }}\r\n            type=\"color\"\r\n            name=\"color\"\r\n            value={notes.color || \"#ffffff\"}\r\n            onChange={(e) => setNote({ ...notes, color: e.target.value })}\r\n          />\r\n        </div>\r\n      </form>\r\n      <NewNote\r\n        items={items}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n        theme={props.theme}\r\n        layout={props.layout}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faList } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport Note from \"./Note\";\r\n\r\nexport default function Navbar() {\r\n  const [themeBtnText, setThemeText] = useState(\"Enable Dark Theme\");\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [layout, setLayout] = useState({\r\n    display: \"grid\",\r\n    justifyContent: \"space-around\",\r\n    gridTemplateColumns: \"repeat(1, 400px)\",\r\n  });\r\n\r\n  const toggleTheme = {\r\n    backgroundColor: theme === \"dark\" ? \"#ff6600\" : \"#ffa500\",\r\n    color: theme === \"dark\" ? \"white\" : \"#333333\",\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    setTheme(\"dark\");\r\n    setThemeText(\"Disable Dark Theme\");\r\n\r\n    if (theme === \"dark\") {\r\n      setThemeText(\"Enable Dark Theme\");\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n\r\n  const handleLayout = () => {\r\n    setLayout({ ...layout, gridTemplateColumns: \"repeat(3, 400px)\" });\r\n  };\r\n\r\n  const resetLayout = () => {\r\n    setLayout({ ...layout, gridTemplateColumns: \"repeat(1, 400px)\" });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const data = localStorage.getItem(\"theme\");\r\n    if (data) {\r\n      setTheme(JSON.parse(data));\r\n    }\r\n  }, []); //display what was in local storage only on the first render\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(\"theme\", JSON.stringify(theme));\r\n  }); // set items array of all the values into the localstorage\r\n\r\n  console.log(layout);\r\n  return (\r\n    <div className=\"wrapper\" style={{ backgroundColor: theme === \"dark\" ? \"#333333\" : \"white\" }}>\r\n      <nav style={toggleTheme} className=\"navbar\">\r\n        <div style={{ letterSpacing: \"5px\" }} className=\"title-name\">\r\n          ENTRY\r\n        </div>\r\n        <button style={toggleTheme} onClick={resetLayout} className=\"refresh-btn\">\r\n          <FontAwesomeIcon icon={faRedo} size=\"2x\" />\r\n        </button>\r\n        <button onClick={handleLayout} style={toggleTheme} className=\"modify-layout-btn\">\r\n          <FontAwesomeIcon icon={faList} size=\"2x\" />\r\n        </button>\r\n\r\n        <Dropdown style={toggleTheme}>\r\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n            <FontAwesomeIcon style={toggleTheme} icon={faCog} size=\"2x\" />\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu style={toggleTheme}>\r\n            <Dropdown.Item onClick={handleClick}>{themeBtnText}</Dropdown.Item>\r\n            {/* <Dropdown.Item href=\"./\">Settings</Dropdown.Item> */}\r\n            <Dropdown.Item href=\"./\">Help</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </nav>\r\n      <Note theme={theme} layout={layout} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport NewNote from \"./NewNote\";\r\n\r\nexport default class Main extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      item: [],\r\n      currentItem: {\r\n        key: \"\",\r\n        text: \"\",\r\n        color: \"#ffffff\",\r\n      },\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      currentItem: {\r\n        text: e.target.value,\r\n        key: this.state.currentItem.key,\r\n        color: this.state.currentItem.color,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleChangeTitle = (e) => {\r\n    this.setState({\r\n      currentItem: {\r\n        text: this.state.currentItem.text,\r\n        key: e.target.value,\r\n        color: this.state.currentItem.color,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleColorPicker = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      currentItem: {\r\n        color: e.target.value,\r\n        key: this.state.currentItem.key,\r\n        text: this.state.currentItem.text,\r\n      },\r\n    });\r\n  };\r\n\r\n  deleteItem = (key) => {\r\n    const filteredItems = this.state.item.filter((targetKey) => targetKey.key !== key);\r\n    this.setState({\r\n      item: filteredItems,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newItem = this.state.currentItem;\r\n    if (this.state.currentItem.text === \"\" || this.state.currentItem.key === \"\") {\r\n      return;\r\n    } else if (newItem !== \"\") {\r\n      const newItems = [...this.state.item, newItem];\r\n      this.setState({\r\n        item: newItems, //pushes the text over to the array\r\n        currentItem: {\r\n          text: \"\", // make empty after adding what was currentItem to the item array\r\n          key: \"\", // make empty\r\n          color: \"#ffffff\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  setUpdate = (text, key) => {\r\n    console.log(\"items: \" + this.state.item);\r\n    const editedItem = this.state.item;\r\n    editedItem.map((eachItem) => {\r\n      if (eachItem.key == key) {\r\n        console.log(\"its a match\");\r\n        eachItem.text = text;\r\n      }\r\n    });\r\n    this.setState({\r\n      item: editedItem,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.item);\r\n    let buttonStyles = {\r\n      display: \"flex\",\r\n      flexAlign: \"row\",\r\n      alignItems: \"center\",\r\n    };\r\n    return (\r\n      <div className=\"main-body\">\r\n        <form className=\"enter-text\">\r\n          <input\r\n            className=\"input-title\"\r\n            placeholder=\"Title...\"\r\n            name=\"key\"\r\n            value={this.state.currentItem.key || \"\"}\r\n            onChange={this.handleChangeTitle}\r\n          />\r\n\r\n          <TextareaAutosize\r\n            name=\"text\"\r\n            className=\"input-note\"\r\n            placeholder=\"enter note...\"\r\n            minRows=\"5\"\r\n            spellCheck=\"false\"\r\n            value={this.state.currentItem.text || \"\"}\r\n            onChange={this.handleChange}\r\n          />\r\n          <div style={buttonStyles}>\r\n            <button\r\n              style={{ border: \"none\", outline: \"none\", height: \"4vh\", width: \"8vh\" }}\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Enter\r\n            </button>\r\n\r\n            <input\r\n              style={{ height: \"4vh\", width: \"8vh\" }}\r\n              type=\"color\"\r\n              name=\"color\"\r\n              value={this.state.currentItem.color || \"#ffffff\"}\r\n              onChange={this.handleColorPicker}\r\n            />\r\n          </div>\r\n        </form>\r\n\r\n        <NewNote\r\n          item={this.state.item}\r\n          deleteItem={this.deleteItem}\r\n          setUpdate={this.setUpdate}\r\n          color={this.state.currentItem.color}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport Main from \"./Components/Main\";\nimport NewNote from \"./Components/NewNote\";\nimport Note from \"./Components/Note\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      {/* <Note /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./Index.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}